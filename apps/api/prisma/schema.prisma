/// Prisma Client Generator – erzeugt TypeScript Client für Datenbankzugriff
generator client {
  provider = "prisma-client-js"
}

/// PostgreSQL Datenquelle mit URL aus der Umgebung
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// Kunden- und Lead-Daten inkl. Automations-Kennzahlen
model Customer {
  id                String       @id @default(cuid())
  name              String
  company           String
  email             String
  projectType       String?
  interest          String?
  status            String       @default("lead")
  notes             String?
  source            String       @default("website")
  n8nConfig         Json?
  elevenConfig      Json?
  callCount         Int          @default(0)
  voiceMinutes      Int          @default(0)
  automationCoverage Float       @default(0)
  csat              Float        @default(4.6)
  workflowStatus    String       @default("inactive")
  lastActivity      DateTime?
  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @updatedAt
  webhookLogs       WebhookLog[]
}

/// Unterstützte Konfigurationstypen
enum ConfigType {
  N8N
  ELEVENLABS
}

/// Konfigurationsspeicher für Integrationen (n8n, ElevenLabs)
model IntegrationConfig {
  id        String     @id @default(cuid())
  type      ConfigType @unique
  data      Json?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

/// Protokoll der eingehenden Webhooks für Transparenz im Dashboard
model WebhookLog {
  id         String    @id @default(cuid())
  source     String
  message    String?
  payload    Json
  customer   Customer? @relation(fields: [customerId], references: [id])
  customerId String?
  createdAt  DateTime  @default(now())
}
